P1.1/On a crée une classe vecteur comme demandé comprenant un vector<double> comme attribut en privee et 
la plupart des méthodes en public. Les méthodes qui, soit initialise un vecteur, soit sont operatoires,
sont facilement accesssibles. seule la methode verifiant si la dimension du vecteur passé en argument 
est la même que l'attribut est en privée en efet elle est utile dans la definitions des autres méthodes 
mais pas pour le programeur utilisateur. 
 
P1.2/On a choisis de prendre la dimension du premier des deux opérandes, on a trouvé que c'etait le plus
naturel dans le code. Bien que l'on perd des infos du deuxieme vecteur, on pourra choisr lequel des deux 
mettre en premier ce qui donnera d'autres possibilités au codde.

P4.1/Non car on en a pas eu l'utilité jusqu'a présent.

P4.2/
a)Il faudrait rajouter ces éléments comme attributs par exemple(teta, phi et r)
b)Etant donné qu'il existe déjà un constructeur prenant trois arguments double il faudrait que les types 
du nouveau soient différents ce qui parait peu pratique pour des angles et une longueure. 

P4.3/On ajouté ces opérateurs:
En interne: +=, -=, ^=(n'a pas trop de sens mais est pratique pour mettre le produit vectoriel en externe), *= ( la multiplication d'un vecteur par un scalaire), ~(qui prend la direction et le sens du vecteur, remplace unitaire), *, - (prend l'opposé) et == .Ces quatres derniers ont été mis en interne pour pouvoir accéder a l'attribut sans avoir à utiliser de methode get, bien qu'un nouveau vecteur est crée pour certains, on a fait ce choix pour simplifier le code.
En externe: +, -, *(la multiplication par un scalaire) et <<.
 
